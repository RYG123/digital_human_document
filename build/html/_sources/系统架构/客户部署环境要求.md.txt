##  客户部署环境要求

本节将引导客户将如何使用docker技术并且进行项目环境配置：

### **Docker技术**
Docker是一种流行的容器化平台，可帮助开发人员和运维团队更方便地打包、分发和运行应用程序及其依赖项。在数字人项目中，使Docker来构建容器化环境，以便统一管理和部署系统的各个组件。

通过使用Docker，您可以将前端层、后端层和语言模型层分别打包成独立的镜像，并在不同的容器中运行。这有助于简化部署流程、提高可移植性，并提供资源隔离和扩展性。

Docker的优势在于提供了一个标准化、可重复部署的环境，简化了应用程序的分发和运行过程。通过定义好的Dockerfile和镜像，您可以轻松地在不同环境中部署数字人系统，并确保一致的运行状态。此外，Docker还提供了容器编排工具（如Docker Compose和Kubernetes），使得管理多个容器和跨主机的应用程序成为可能。

我们的项目的各个模块都是放在docker容器中的，每个docker容器都已经进行了相关的配置，客户只需要把docker镜像拉下来，并且按照我们提供的命令进行各个docker容器进行运行便可轻松使用程序，无需再进行任何繁琐的环境配置。

<!-- > <font color = "red" size = "15">后续请补充docker的安装方法</font> -->

### **前端层**
我们使用vue进行网页开发，并在docker容器中进行了相关的配置。
```shell
docker search search [前端镜像名]
docker pull [前端镜像名] tag:[版本号]
#运行完会进入容器内部
docker run -it --name [自行给前端容器进行取名] [前端镜像名]:[版本号] /bin/bash  

# 上一条命令行会进入docker容器内部

# 根据运行给出的网址进行访问便可看到网页端
npm run dev 
```

### **后端层**
在部署数字人系统的后端层时，我们建议同样使用Docker来进行容器化部署。可以使用Docker容器来打包和管理后端服务组件，例如处理前端请求、调用Sadtalker算法和服务，以及视频推送等功能。通过使用Docker，可以确保应用程序在不同环境中的一致性，并提供可伸缩性和弹性调度的能力。
```shell
docker search search [后端镜像名]
docker pull [后端镜像名] tag:[版本号]
#运行完会进入容器内部
docker run -it --name [自行给后端容器进行取名] [后端镜像名]:[版本号] /bin/bash  

# 上一条命令行会进入docker容器内部

# 直接运行便可
pyhton sadtalker.py
```

### **语言模型层**
针对语言模型层的部署，我们将<font color="red">ChatGlm模型和后端层一并放在同一个docker容器中</font>。并通过Docker技术进行容器的部署和管理。通过这种方式，可以确保语言模型的可靠运行，后端可以直接与chatGlm进行交互，并为其提供所需的计算资源和依赖项。

### **硬件资源要求**
数字人项目通常会使用GPU来进行深度学习模型的训练和推理。并且因为视频生成技术也需要较好的硬件资源支持，所以这边建议使用**NVIDIA**的**Tesla** **V100**、**A100**等高性能GPU，应用于加速机器学习和自然语言处理任务和视频生成。